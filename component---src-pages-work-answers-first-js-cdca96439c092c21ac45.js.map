{"version":3,"sources":["webpack:///./src/pages/work/answers-first.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","showHeader","title","id","className","to","style","border","width","src","allowFullScreen","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Header","siteTitle","react_default","position","top","left","right","textAlign","gatsby_browser_entry","ConditionalHeader","components_header","Layout","props","_856328897","Fragment","layout_ConditionalHeader","children","node"],"mappings":"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","file":"component---src-pages-work-answers-first-js-cdca96439c092c21ac45.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\n\nconst SecondPage = () => (\n  <Layout showHeader={true}>\n    <SEO title=\"Answers First\" />\n    <div id=\"main\">\n      <div className=\"intro\">\n        <div className=\"intro-copy\">\n          <h1>\"Answers First\"</h1>\n          <h2 className=\"intro-copy__headline\">\n            Our app needed major additions, but how could we keep or even\n            improve our usability as we added new features?\n          </h2>\n        </div>\n      </div>\n      <div className=\"work__copy\">\n        <h3>What was the problem?</h3>\n        <p>\n          More than anything, what our users want is not an additional metric,\n          or new type of graph. What they want are real answers to business\n          questions. Now, in order to answer those questions, we had work to do.\n          We needed a broader array of analysis tools in the application, and we\n          needed new ways to draw connections between our analysis outputs and\n          our users' business goals.\n        </p>\n        <h3>How did we approach this design?</h3>\n        <p>\n          The solution I proposed is called \"Answers First\". We would lean into\n          our technology's strength, producing meaningful results within minutes\n          from thousands or tens-of-thousands or even hundres of thousands of\n          documents. We would build a new project view called{\" \"}\n          <Link to=\"/work/highlights\">Highlights</Link> that would present\n          high-level insights (This is where you get \"Answers First\"), then we\n          would guide users to our more in-depth tools to build off of these\n          foundational discoveries.\n        </p>\n      </div>\n      <div className=\"work__art-container\">\n        <div className=\"figma-iframe--large\">\n          <iframe\n            title=\"iframe 1\"\n            style={{ border: \"none\" }}\n            width=\"100%\"\n            src=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2Fv5jmrmjss7Yi399fk4GJew%2FAnswers-first-slides\"\n            allowFullScreen\n          ></iframe>\n          <h4 className=\"work__art-caption\">\n            Slides from an early board presentation explaining the \"Answers\n            First\" approach\n          </h4>\n        </div>\n      </div>\n      <div className=\"work__art-container\">\n        <div className=\"figma-iframe--small\">\n          <iframe\n            title=\"iframe 2\"\n            style={{ border: \"none\" }}\n            width=\"100%\"\n            src=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2F1RIMxkNrRAs3rCiejN0XkN%2FAnswers-first-view-examples%3Fnode-id%3D2%253A31\"\n            allowFullScreen\n          ></iframe>\n          <h4 className=\"work__art-caption\">\n            A slide from an early board presentation showing a Highlights page\n            concept\n          </h4>\n        </div>\n        <div className=\"figma-iframe--small\">\n          <iframe\n            title=\"iframe 3\"\n            style={{ border: \"none\" }}\n            width=\"100%\"\n            src=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2F1RIMxkNrRAs3rCiejN0XkN%2FAnswers-first-view-examples%3Fnode-id%3D2%253A6\"\n            allowFullScreen\n          ></iframe>\n          <h4 className=\"work__art-caption\">\n            A slide from an early board presentation showing an in-depth\n            analysis view\n          </h4>\n        </div>\n      </div>\n      <div className=\"work__art-container\">\n        <div className=\"figma-iframe--large\">\n          <iframe\n            title=\"iframe 1\"\n            style={{ border: \"none\" }}\n            width=\"100%\"\n            src=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FVcKqDhujLs16b1wQrcgR7L%2FHighlights-full-page-mock%3Fnode-id%3D1%253A645\"\n            allowFullScreen\n          ></iframe>\n          <h4 className=\"work__art-caption\">\n            The Highlights feature as it looked when we released it to our users\n          </h4>\n        </div>\n      </div>\n      <div className=\"work__copy\">\n        <h3>What did we learn?</h3>\n        <p>\n          The main elements of the Answers First project (New analysis features\n          and a <Link to=\"/work/highlights\">Highlights</Link> page focused on\n          business goals) have so far proved helpful to new users and has\n          reduced our reliance on custom scripts and additional training\n          sessions. Over time, we hope to introduce further customization,\n          over-time views and sharing and export options.\n        </p>\n      </div>\n    </div>\n  </Layout>\n);\n\nexport default SecondPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport \"./header.css\";\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      textAlign: \"center\"\n    }}\n  >\n    <div className=\"nav__menu\">\n      <Link className=\"nav__item\" to=\"/\">\n        ← Back to Home\n      </Link>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  siteTitle: ``\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\nimport \"./normalize.css\";\nimport \"./layout.css\";\n\nconst ConditionalHeader = ({ showHeader }) => {\n  if (showHeader) {\n    return <Header />;\n  } else {\n    return null;\n  }\n};\n\nconst Layout = props => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <ConditionalHeader showHeader={props.showHeader} />\n      <main>{props.children}</main>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n"],"sourceRoot":""}