{"version":3,"sources":["webpack:///./src/pages/work/highlights.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","showHeader","title","id","className","style","border","width","src","allowFullScreen","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Header","siteTitle","react_default","position","top","left","right","textAlign","gatsby_browser_entry","to","ConditionalHeader","components_header","Layout","props","_856328897","Fragment","layout_ConditionalHeader","children","node"],"mappings":"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","file":"component---src-pages-work-highlights-js-68866c24d40b8565a3c9.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\n\nconst SecondPage = () => (\n  <Layout showHeader={true}>\n    <SEO title=\"The Highlights Page\" />\n    <div id=\"main\">\n      <div className=\"intro\">\n        <div className=\"intro-copy\">\n          <h1>The Highlights Page</h1>\n          <h2 className=\"intro-copy__headline\">\n            The Highlights page is a new homepage for projects in our flagship\n            application. It's the cornerstone of our new \"Answers first\"\n            strategy.\n          </h2>\n        </div>\n      </div>\n      <div className=\"work__copy\">\n        <h3>What was the problem?</h3>\n        <p>\n          Customer feedback and interviews with users showed that there were a\n          number of important parts of our users' workflow that we simply didn't\n          support in our flagship application. To compound the issue, our users\n          sometimes felt paralyzed after creating a project. Despite training,\n          they just didn't know where to begin with their analysis process. With\n          a growing team setting more ambitious goals, we needed a way to add a\n          number of new features and at the same time, provide even better\n          guidance despite growing complexity.\n        </p>\n        <h3>How did we approach this design?</h3>\n        <p>\n          An AI-powered text analytics application is always at risk of being\n          too complicated and arcane for some users, and certainly we had gotten\n          that feedback before. Now we were looking to add a number of new\n          features to our UI, and adding more options could only compound the\n          problem without some additional guidance for the user\n        </p>\n        <p>\n          The Highlights feature involved a number of newly designed\n          visualizations and complex interactions. This design process involved\n          interactive prototyping and usability testing from an early stage\n          because, without real data and real users we could only guess if the\n          design was successful.\n        </p>\n      </div>\n      <div className=\"work__art-container\">\n        <div className=\"figma-iframe--large\">\n          <iframe\n            title=\"iframe 1\"\n            style={{ border: \"none\" }}\n            width=\"100%\"\n            src=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FVcKqDhujLs16b1wQrcgR7L%2FHighlights-full-page-mock%3Fnode-id%3D1%253A645\"\n            allowFullScreen\n          ></iframe>\n          <h4 className=\"work__art-caption\">\n            Full-page mockup of the highlights page\n          </h4>\n        </div>\n      </div>\n      <div className=\"work__art-container\">\n        <div className=\"figma-iframe--small\">\n          <iframe\n            title=\"iframe 2\"\n            style={{ border: \"none\" }}\n            width=\"100%\"\n            src=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2Fx2TwRADK9HAjzXzXCFVuVA%2FHighlights-cards%3Fnode-id%3D2%253A310\"\n            allowFullScreen\n          ></iframe>\n          <h4 className=\"work__art-caption\">\n            A mockup of a Highlights card showing the most prevalent concepts in\n            a project\n          </h4>\n        </div>\n        <div className=\"figma-iframe--small\">\n          <iframe\n            title=\"iframe 3\"\n            style={{ border: \"none\" }}\n            width=\"100%\"\n            src=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2Fx2TwRADK9HAjzXzXCFVuVA%2FHighlights-cards%3Fnode-id%3D2%253A311\"\n            allowFullScreen\n          ></iframe>\n          <h4 className=\"work__art-caption\">\n            A mockup of a Highlights card showing concepts that are driving down\n            a product's star ratings\n          </h4>\n        </div>\n      </div>\n      <div className=\"work__copy\">\n        <h3>What did we learn?</h3>\n        <p>\n          Our users valued the high-level visualizations of their project data\n          and how quickly and easily they can get to this output. But what we\n          didn't anticipate was that the plain-language captions on our\n          highlights cards would be far and away the greatest improvement for\n          our users, explaining the value of our features in and guiding users\n          to the correct tool to look deeper.\n        </p>\n      </div>\n    </div>\n  </Layout>\n);\n\nexport default SecondPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport \"./header.css\";\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      textAlign: \"center\"\n    }}\n  >\n    <div className=\"nav__menu\">\n      <Link className=\"nav__item\" to=\"/\">\n        ← Back to Home\n      </Link>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  siteTitle: ``\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\nimport \"./normalize.css\";\nimport \"./layout.css\";\n\nconst ConditionalHeader = ({ showHeader }) => {\n  if (showHeader) {\n    return <Header />;\n  } else {\n    return null;\n  }\n};\n\nconst Layout = props => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <ConditionalHeader showHeader={props.showHeader} />\n      <main>{props.children}</main>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n"],"sourceRoot":""}