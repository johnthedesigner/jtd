import { useEffect, useState } from 'react'
import _ from 'lodash'
import Head from 'next/head'
import Color from 'color'

import Artboard from '../components/Artboard'
import artboardJson from '../artboard'
import { mapArtboard } from '../utils/artboardUtils'
import { colorsWithFallback } from '../utils/colorUtils'
import Layer from '../components/Layer'

export default function Home() {
    const artboardWrapperStyles = {
        position: 'absolute',
        top: 0,
        right: 0,
        bottom: 0,
        left: 0,
        backgroundColor: '#EEEEEE',
        backgroundImage: 'radial-gradient(#BBBBBB 1px, transparent 0)',
        backgroundSize: '24px 24px',
        backgroundPosition: '-6px -6px',
    }

    const [scaleFactor, setScaleFactor] = useState(1)
    const [isScaled, setIsScaled] = useState(false)
    const [artboardSize, setArtboardSize] = useState({
        width: 1000,
        height: 1000,
    })

    useEffect(() => {
        const resizeArtboard = () => {
            // Get appropriate size for artboard based on viewport size
            let wrapper = document.getElementById(`artboard-wrapper`)
            setArtboardSize({
                width: wrapper.clientWidth,
                height: wrapper.clientHeight,
            })
            setScaleFactor(
                _.min([wrapper.clientWidth, wrapper.clientHeight]) / 1000
            )
            setIsScaled(true)
        }

        if (document != null) {
            resizeArtboard()
        }

        window.addEventListener('resize', resizeArtboard)

        return () => {
            window.removeEventListener('resize', resizeArtboard)
        }
    }, [])

    const mappedArtboard = mapArtboard(artboardJson)

    return (
        <div>
            <link
                href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,300i,400,400i,700,700i,900,900i|IBM+Plex+Mono:200,200i,400,400i"
                rel="stylesheet"
            />
            <link
                href="https://fonts.googleapis.com/icon?family=Material+Icons"
                rel="stylesheet"
            />

            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div id="artboard-wrapper" style={artboardWrapperStyles}>
                <Artboard scaleFactor={scaleFactor}>
                    <div className="artboard__svg-wrapper">
                        <svg
                            width={artboardSize.width}
                            height={artboardSize.height}
                            viewBox="0 0 1000 1000"
                        >
                            <defs>
                                {_.map(mappedArtboard.layers, (layer) => {
                                    let { fill } = layer.adjustments
                                    if (fill === undefined) return null
                                    let fillColors = colorsWithFallback(
                                        fill.color,
                                        fill.gradient
                                    )
                                    let fillConfig
                                    if (fill.type === 'gradient') {
                                        fillConfig = fillColors.gradient
                                    } else {
                                        fillConfig = {
                                            angle: 0,
                                            start: fillColors.solid,
                                            end: fillColors.solid,
                                        }
                                    }

                                    return (
                                        <linearGradient
                                            key={layer.id}
                                            id={`gradient${layer.id}`}
                                            x1="0%"
                                            x2="0%"
                                            y1="0%"
                                            y2="100%"
                                        >
                                            <stop
                                                className="stop1"
                                                offset="0%"
                                                stopColor={Color(
                                                    fillConfig.start
                                                ).hex()}
                                            />
                                            <stop
                                                className="stop2"
                                                offset="100%"
                                                stopColor={Color(
                                                    fillConfig.end
                                                ).hex()}
                                            />
                                        </linearGradient>
                                    )
                                })}
                            </defs>
                            {_.map(
                                _.orderBy(mappedArtboard.layers, 'order'),
                                (layer, index) => {
                                    return (
                                        <Layer
                                            // dragLayers={dragLayers}
                                            // highlightLayer={highlightLayer}
                                            key={layer.id}
                                            layer={layer}
                                            // selectLayer={selectLayer}
                                            isScaled={isScaled}
                                            scaleFactor={scaleFactor}
                                            // scaleLayer={scaleLayer}
                                        />
                                    )
                                }
                            )}
                        </svg>
                    </div>
                </Artboard>
            </div>
        </div>
    )
}
